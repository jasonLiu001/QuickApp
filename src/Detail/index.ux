<style lang="less">
    @import '../Common/css/index.less';
</style>

<template>
    <div class="container" style="padding-bottom: 24px;">
        <list class="box" onscrollbottom="loadMoreData">
            <block for="{{(index,row) in list}}">
                <!--表行数据-->
                <list-item type="data" class="margin_top">

                    <stack>

                        <!--列表正常数据-->
                        <div style="width: 100%;padding:10px;flex-direction: column;border-radius:10px;background-color: #ffffff">
                            <div style="justify-content: space-between">
                                <text>{{row.period}}</text>
                                <text>{{row.investTime}}</text>
                            </div>

                            <!--表各列数据-->
                            <block for="{{(index,columnName) in getColumnNames(row)}}">
                                <div style="justify-content: space-between">
                                    <text>{{getColumnTextByColumnName(columnName)}}:</text>
                                    <text>{{row[columnName]}}</text>
                                </div>
                            </block>
                        </div>

                        <!--status图标-->
                        <div style="margin-left: 300px;margin-top:40px;opacity:0.5;height: 50px;width: 100px;">
                            <text show="{{row.status===1}}" style="color: #f76160;">已完成</text>
                            <text show="{{row.status===0}}" style="color: #27f730;">进行中</text>
                        </div>

                        <!--isWin图标-->
                        <div style="margin-left: 400px;margin-top:20px;opacity:0.7;height: 70%;width: 100px;">
                            <text show="{{row.isWin===1}}"
                                  style="background-image: url('../Common/img/icon_right.png')">
                            </text>
                            <text show="{{row.isWin===0}}"
                                  style="background-image: url('../Common/img/icon_error.png')">
                            </text>
                        </div>

                    </stack>

                </list-item>
            </block>

            <!--加载更多-->
            <list-item type="loadMore" style="flex-direction: row;justify-content: center;">
                <progress type="circular" show="{{hasMoreData}}"></progress>
                <text show="{{hasMoreData}}">正在载入...</text>
                <text show="{{!hasMoreData}}">已加载全部</text>
            </list-item>

        </list>
    </div>
</template>

<script>
    import {investTable, maxProfitTable, apiUrl} from '../Common/js/data';
    import fetch from '@system.fetch';

    export default {
        private: {
            hasMoreData: true,
            pageIndex: 1,
            list: []
        },
        protected: {
            //上个页面传递的参数
            tableName: ''
        },
        getColumnNames(row) {
            let list = [];
            for (let columnName in row) {
                //排除不需要列名
                if (columnName === 'investNumbers'
                    || columnName === 'period'
                    || columnName === 'planType'
                    || columnName === 'awardMode'
                    || columnName === 'winMoney'
                    || columnName === 'investTime'
                    || columnName === 'status'
                    || columnName === 'isWin'
                    || columnName === 'investNumberCount') continue;

                list.push(columnName);
            }
            return list;
        },
        getColumnTextByColumnName(columnName) {
            let columnText = '';
            switch (columnName) {
                case 'currentAccountBalance':
                    columnText = '账号余额';
                    break;
                case 'isWin':
                    columnText = '盈利状态';
                    break;
                default:
                    columnText = columnName;
            }
            return columnText;
        },
        getTableFields() {
            let list = [];
            switch (this.tableName) {
                case 'invest':
                    list = investTable;
                    break;
                case 'max_profit':
                    list = maxProfitTable;
                    break;
            }

            return list;
        },
        findInvestInfoList() {
            //console.log(`title: ${JSON.parse(data.data).title}`)
            fetch.fetch({
                url: apiUrl.findInvestInfoList + "?pageIndex=" + this.pageIndex + "&pageSize=20&planType=1",
                method: 'POST',
                success: (data) => {
                    if (data) {
                        //解析 服务器端接口数据
                        let serverData = JSON.parse(data.data);

                        //全部加载完成 隐藏正在载入...
                        if (serverData.data === null || serverData.data === undefined) {
                            this.hasMoreData = false;
                            return;
                        }

                        //遍历数组数据
                        for (let key in serverData.data) {
                            this.list.push(serverData.data[key]);
                        }

                    }
                },
                fail: (data, code) => {
                    console.log(`handling fail, code = ${code}`)
                }
            })
        },
        onInit() {

        },
        onShow() {
            this.findInvestInfoList();
        },
        onMenuPress() {
            this.$app.$def.showMenu();
        },
        loadMoreData() {
            this.pageIndex++;
            this.findInvestInfoList();
        }
    }
</script>