<style lang="less">
    @import '../Common/css/index.less';
</style>

<template>
    <div class="container">
        <list class="box">
            <block for="{{(index,row) in list}}">

                <!--表行数据-->
                <list-item type="data"
                           style="padding:10px;flex-direction: column;border-radius:10px;"
                           class="margin-bottom">
                    <text style="font-size: 30px;line-height: 60px;">{{row.period}}</text>

                    <!--表各列数据-->
                    <block for="{{(index,columnName) in getColumnNames(row)}}">
                        <div style="justify-content: space-between">
                            <text>{{getColumnTextByColumnName(columnName)}}:</text>
                            <text>{{row[columnName]}}</text>
                        </div>
                    </block>
                </list-item>
            </block>
        </list>
    </div>
</template>

<script>
    import {investTable, maxProfitTable, apiUrl} from '../Common/js/data';
    import fetch from '@system.fetch';

    export default {
        private: {
            message: "详情页",
            list: []
        },
        protected: {
            //上个页面传递的参数
            tableName: ''
        },
        getColumnNames(row) {
            let list = [];
            for (let columnName in row) {
                //排除不需要列名
                if (columnName === 'investNumbers'
                    || columnName === 'period'
                    || columnName === 'planType'
                    || columnName === 'awardMode'
                    || columnName === 'winMoney'
                    || columnName === 'investNumberCount') continue;

                list.push(columnName);
            }
            return list;
        },
        getColumnTextByColumnName(columnName) {
            let columnText = '';
            switch (columnName) {
                case 'currentAccountBalance':
                    columnText = '账号余额';
                    break;
                case 'status':
                    columnText = '状态';
                    break;
                default:
                    columnText = columnName;
            }
            return columnText;
        },
        getTableFields() {
            let list = [];
            switch (this.tableName) {
                case 'invest':
                    list = investTable;
                    break;
                case 'max_profit':
                    list = maxProfitTable;
                    break;
            }

            return list;
        },
        onInit() {

        },
        onShow() {
            let list = this.list;
            fetch.fetch({
                url: apiUrl.findInvestInfoList + "?pageIndex=1&pageSize=20&planType=1",
                method: 'POST',
                data: 'pageIndex=1&pageSize=20&planType=1',
                success: function (data) {
                    if (data) {
                        //服务器端数据
                        let serverData = JSON.parse(data.data);

                        //遍历数组数据
                        for (let key in serverData.data) {
                            list.push(serverData.data[key]);
                        }
                    }
                    //console.log(`title: ${JSON.parse(data.data).title}`)
                },
                fail: function (data, code) {
                    console.log(`handling fail, code = ${code}`)
                }
            })
        },
        onMenuPress() {
            this.$app.$def.showMenu();
        }
    }
</script>