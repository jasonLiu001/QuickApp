<style lang="less">
    @import '../Common/css/index.less';
</style>

<template>
    <div class="container" style="padding-bottom: 24px;">
        <!--数据列表-->
        <list class="box" onscrollbottom="loadMoreData">
            <block for="{{(index,row) in list}}">
                <!--表行数据-->
                <list-item type="data" class="margin_top" onclick="clickRowTabHandler(row)">

                    <stack style="height: 100%;">

                        <!--列表正常数据-->
                        <div style="width: 100%;padding:10px;flex-direction: column;border-radius:10px;background-color: #ffffff">
                            <div style="justify-content: space-between">
                                <text>{{row.period}}</text>
                                <text>{{row.investTime}}</text>
                            </div>

                            <!--表各列数据-->
                            <block for="{{(columnIndex,columnItem) in displayColumns}}">
                                <div style="justify-content: space-between">
                                    <text>{{columnItem.des}}:</text>
                                    <text>{{row[columnItem.name]}}</text>
                                </div>
                            </block>
                        </div>

                        <!--status图标-->
                        <div style="margin-left: 300px;margin-top:40px;opacity:0.5;height: 50px;width: 100px;">
                            <text show="{{row.status===1}}" style="color: #f76160;">已完成</text>
                            <text show="{{row.status===0}}" style="color: #27f730;">进行中</text>
                        </div>

                        <!--isWin图标-->
                        <div show="{{isShowWinIcon()}}"
                             style="margin-left: 400px;margin-top:20px;opacity:0.7;height: 70%;width: 100px;">
                            <image show="{{row.isWin===1&&row.status===1}}"
                                   src="{{icons.icon_completed_right}}"></image>
                            <image show="{{row.isWin===0&&row.status===1}}"
                                   src="{{icons.icon_completed_wrong}}"></image>
                        </div>

                    </stack>
                </list-item>
            </block>

            <!--加载更多-->
            <list-item type="loadMore" style="flex-direction: row;justify-content: center;">
                <progress type="circular" show="{{hasMoreData}}"></progress>
                <text show="{{hasMoreData}}">正在载入...</text>
                <text show="{{!hasMoreData}}">已加载全部</text>
            </list-item>

        </list>

    </div>
</template>

<script>
    import {apiUrl, iconList, apiCollection} from '../Common/js/data';
    import device from '@system.device'
    import prompt from '@system.prompt';
    import fetch from '@system.fetch';
    import router from '@system.router';

    export default {
        private: {
            list: [],
            pageSize: 20,
            pageIndex: 1,
            hasMoreData: true,

            icons: iconList,
            displayColumns: [{id: 1, name: 'currentAccountBalance', des: '账号余额'}]
        },
        protected: {
            //页面参数
            apiName: '',
            apiDesc: ''
        },
        onInit() {
            this.renderPageData();
            this.setTitleBarTextOnInit();
        },
        onShow() {
        },
        setTitleBarTextOnInit() {
            this.$page.setTitleBar({
                text: this.apiDesc
            });
        },
        isShowWinIcon() {
            let isShow = true;
            switch (this.apiName) {
                case "plan01_before22":
                case "plan01_before02":
                case "plan02_before22":
                case "plan02_before02":
                case "plan03_before22":
                case "plan03_before02":
                case "plan04_before22":
                case "plan04_before02":
                    isShow = false;
                    break;
                default:
                    isShow = true;
            }
            return isShow;
        },

        getInvestInfoRequestUrl(dataUrl) {
            let url;
            switch (this.apiName) {
                case "plan01":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=1";
                    break;
                case "plan02":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=2";
                    break;
                case "plan03":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=3";
                    break;
                case "plan04":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=4";
                    break;
                case "plan01_all_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=1&beforeTimeStr=22:00:00";
                    break;
                case "plan02_all_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=2&beforeTimeStr=22:00:00";
                    break;
                case "plan03_all_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=3&beforeTimeStr=22:00:00";
                    break;
                case "plan04_all_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=4&beforeTimeStr=22:00:00";
                    break;
                default:
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=1";
            }
            return url;
        },
        getInvestInfoBeforeTimeRequestUrl(dataUrl) {
            let url;
            switch (this.apiName) {
                case "plan01_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=1&beforeTimeStr=22:00:00";
                    break;
                case "plan01_before02":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=1&beforeTimeStr=02:00:00";
                    break;
                case "plan02_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=2&beforeTimeStr=22:00:00";
                    break;
                case "plan02_before02":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=2&beforeTimeStr=02:00:00";
                    break;
                case "plan03_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=3&beforeTimeStr=22:00:00";
                    break;
                case "plan03_before02":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=3&beforeTimeStr=02:00:00";
                    break;
                case "plan04_before22":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=4&beforeTimeStr=22:00:00";
                    break;
                case "plan04_before02":
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=4&beforeTimeStr=02:00:00";
                    break;
                default:
                    url = dataUrl + "?pageIndex=" + this.pageIndex + "&pageSize=" + this.pageSize + "&planType=1&beforeTimeStr=22:00:00";
            }
            return url;
        },

        /**
         * 加载单页数据
         */
        renderPageData() {
            switch (this.apiName) {
                case "plan01":
                case "plan02":
                case "plan03":
                case "plan04":
                case "plan01_all_before22":
                case "plan02_all_before22":
                case "plan03_all_before22":
                case "plan04_all_before22":
                    this.$app.$def.findList('POST', this.list, this.getInvestInfoRequestUrl(apiUrl.findInvestInfoList), () => {
                        this.hasMoreData = false;
                    }, () => {
                        if (this.list.length <= this.pageSize) {
                            this.hasMoreData = false;
                        }
                    });
                    break;
                case "plan01_before22":
                case "plan01_before02":
                case "plan02_before22":
                case "plan02_before02":
                case "plan03_before22":
                case "plan03_before02":
                case "plan04_before22":
                case "plan04_before02":
                    this.$app.$def.findList('POST', this.list, this.getInvestInfoBeforeTimeRequestUrl(apiUrl.findInvestInfoListBeforeTime), () => {
                        this.hasMoreData = false;
                    }, () => {
                        if (this.list.length <= this.pageSize) {
                            this.hasMoreData = false;
                        }
                    });
                    break;
                default:
                    this.$app.$def.findList('POST', this.list, this.getInvestInfoRequestUrl(apiUrl.findInvestInfoList), () => {
                        this.hasMoreData = false;
                    }, () => {
                        if (this.list.length <= this.pageSize) {
                            this.hasMoreData = false;
                        }
                    });
            }
        },

        /**
         * 加载更多
         */
        loadMoreData() {
            this.pageIndex++;
            this.renderPageData();
        },

        clickRowTabHandler(row, evt) {
            router.push({
                uri: '/Detail',
                params: {
                    period: row.period,
                    planType: row.planType
                }
            });
        },
    }
</script>