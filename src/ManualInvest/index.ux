<style lang="less">
    @import '../Common/css/index.less';

    .investItemRow {
        justify-content: space-between;
        align-items: center;
        height: 100px;
        border-bottom-color: #ffffff;
        border-bottom-width: 1px;
    }

    .investInputItemRow {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        height: 100px;
        border-bottom-color: #ffffff;
        border-bottom-width: 1px;
    }
</style>

<template>
    <div class="container">
        <div show="{{isShowLoading}}" style="flex-direction: row;justify-content: center;">
            <progress type="circular"></progress>
            <text>正在载入...</text>
        </div>

        <div class="investItemRow">
            <text style="width: 200px;">方案:</text>
            <text>{{investInfo.planType}}</text>
        </div>
        <div class="investItemRow">
            <text>期号:</text>
            <text>{{investInfo.period}}</text>
        </div>
        <div class="investItemRow">
            <text style="width: 200px;">时间:</text>
            <text>{{investInfo.investTime}}</text>
        </div>
        <div class="investInputItemRow">
            <text>元角分模式:</text>
            <input class="input_border"
                   type="text"
                   onchange="onAwardModeChangeEventHandler(investInfo)"
                   id="awardMode"
                   value="{{investInfo.awardMode}}"/>
            <a style="height: 50px;background-color: #4286f5;color: #ffffff;padding: 5px;border-radius:10px"
               onclick="clickBtnOneInvest(investInfo)">【正向】投注</a>
        </div>
        <div class="investInputItemRow">
            <text>投注倍数:</text>
            <input class="input_border"
                   type="text"
                   onchange="onTouZhuBeiShuChangeEventHandler(investInfo)"
                   id="touZhuBeiShu"
                   value="{{investInfo.touZhuBeiShu}}"/>
        </div>
        <div class="investItemRow">
            <text style="width: 200px;">状态:</text>
            <text show="{{investInfo.status===1}}" class="red_txt">已完成</text>
            <text show="{{investInfo.status===0}}" class="green_txt">进行中</text>
            <a style="height: 50px;background-color: #4286f5;color: #ffffff;padding: 5px;border-radius:10px"
               onclick="clickBtnCancelInvest(investInfo)">撤消投注</a>
        </div>
        <div class="investItemRow">
            <text style="width: 200px;">号码来源表:</text>
            <text class="red_txt">{{investTableName}}</text>
        </div>

        <a class="btn margin_top" onclick="clickBtnOppositeOneInvest(investInfo)">【反向】投注</a>
        <a class="margin-bottom"></a>
    </div>
</template>

<script>
    import {apiUrl, INVEST_TABLE_NAME} from '../Common/js/data';
    import device from '@system.device'
    import prompt from '@system.prompt';
    import fetch from '@system.fetch';
    import router from '@system.router';
    import clipboard from '@system.clipboard';

    export default {
        private: {
            isShowLoading: true,
            investInfo: {}
        },
        protected: {
            period: '',
            planType: 1,
            investTableName: ''
        },
        onInit() {
            this.$page.setTitleBar({
                text: `${this.investTableName}表${this.period}手动投注`
            });
            this.isShowLoading = true;
            let url;
            switch (this.investTableName) {
                case INVEST_TABLE_NAME.invest://invest表
                    url = apiUrl.getInvestInfo + "?tableName=invest";
                    break;
                case INVEST_TABLE_NAME.investTotal://invest_total表
                    url = apiUrl.getInvestInfo + "?tableName=invest_total";
                    break;
                default:
                    url = apiUrl.getInvestInfo + "?tableName=invest";
                    break;
            }
            url = url + "&period=" + this.period + "&planType=" + this.planType;
            this.$app.$def.getData(url, null, 'GET', (res) => {
                this.investInfo = res.data;
                this.isShowLoading = false;
            });
        },
        startInvest(investInfo, isUseOppositeNumbers) {
            let self = this;
            //号码取反
            let oppositeNumberArray = this.$app.$def.getRestNumbersFromSource(this.$app.$def.getTotalNumberArray(), this.investInfo.investNumbers);

            let data = {
                period: investInfo.period,
                planType: investInfo.planType,
                investNumbers: isUseOppositeNumbers ? oppositeNumberArray.join(',') : investInfo.investNumbers,
                awardMode: self.$element("awardMode").attr.value,
                touZhuBeiShu: self.$element("touZhuBeiShu").attr.value,
                investTableName: self.investTableName
            };
            let investRules = "\n投注规则如下：\n1.total表4连错或中时跟投\n2.invest表跟投";
            //确认提示
            this.$app.$def.showConfirmDialog(`投注提醒`, isUseOppositeNumbers ? '确定执行反向投注？' + investRules : '确定执行正向投注？' + investRules,
                () => {
                    self.$app.$def.updateData(apiUrl.manualInvest, data, (res) => {
                        this.$app.$def.showAlert(`提示`, res.message);
                    });
                });
        },
        clickBtnOneInvest(investInfo, evt) {
            this.startInvest(investInfo, false);
        },
        clickBtnOppositeOneInvest(investInfo, evt) {
            this.startInvest(investInfo, true);
        },
        clickBtnCancelInvest(investInfo, evt) {
            let self = this;
            //确认提示
            this.$app.$def.showConfirmDialog(`投注取消`, `确定取消${investInfo.period}期投注吗？`,
                () => {
                    self.$app.$def.updateData(apiUrl.manualCancelInvest, {period: investInfo.period}, (res) => {
                        this.$app.$def.showAlert(`提示`, res.message);
                    });
                });
        },
        onAwardModeChangeEventHandler(investInfo, evt) {
            this.$element("awardMode").attr.value = evt.value;
        },
        onTouZhuBeiShuChangeEventHandler(investInfo, evt) {
            this.$element("touZhuBeiShu").attr.value = evt.value;
        }
    }
</script>
