<style lang="less">
    @import '../Common/css/index.less';
</style>

<template>
    <div class="container">
        <list>
            <block for="{{(settingIndex,settingItem) in list}}">
                <list-item type="settingItem"
                           style="justify-content: space-between;height: 100px;justify-content: space-between;border-bottom-color: #ffffff;border-bottom-width: 1px;">
                    <text>{{settingItem.key}}</text>
                    <input type="text" onchange="onChangeEventHandler(settingItem)" id="{{settingItem.key}}"
                           value="{{settingItem.value}}"></input>
                    <a onclick="btnSaveEventHandler(settingItem)"
                       style="color: #ffffff;background-color: #4286f5;">更新</a>
                </list-item>
            </block>

            <!--加载更多-->
            <list-item show="{{isShowLoading}}" type="loadMore" style="flex-direction: row;justify-content: center;">
                <progress type="circular"></progress>
                <text>正在载入...</text>
            </list-item>
        </list>
    </div>
</template>

<script>
    import {investTable, maxProfitTable, apiUrl, iconList, apiCollection} from '../Common/js/data';
    import device from '@system.device'
    import prompt from '@system.prompt';
    import fetch from '@system.fetch';
    import router from '@system.router';

    export default {
        private: {
            isShowLoading: true,
            list: []
        },
        protected: {},
        onInit() {
        },
        onShow() {
            this.isShowLoading = true;
            this.findList(apiUrl.getAllSettings);
        },

        findList(url) {
            //console.log(`title: ${JSON.parse(data.data).title}`)
            fetch.fetch({
                url: url,
                method: 'GET',
                success: (data) => {
                    if (data) {
                        //解析 服务器端接口数据
                        let serverData = JSON.parse(data.data);

                        //全部加载完成 隐藏正在载入...
                        if (serverData.data === null || serverData.data === undefined) {
                            prompt.showToast({
                                message: `服务器返回数据格式错误`
                            });
                            return;
                        }

                        //所有的设置项
                        this.list = serverData.data;
                        this.isShowLoading = false;
                    }
                },
                fail: (data, code) => {
                    prompt.showToast({
                        message: `请求数据超时, code = ${code}`
                    });
                }
            })
        },
        updateSettingsById(url) {
            fetch.fetch({
                url: url,
                method: 'POST',
                success: (data) => {
                    if (data) {
                        //解析 服务器端接口数据
                        let serverData = JSON.parse(data.data);

                        //全部加载完成 隐藏正在载入...
                        if (serverData.data === null || serverData.data === undefined) {
                            prompt.showToast({
                                message: `服务器返回数据格式错误`
                            });
                            return;
                        }

                        prompt.showToast({
                            message: `数据更新成功`
                        });
                    }
                },
                fail: (data, code) => {
                    prompt.showToast({
                        message: `请求数据超时, code = ${code}`
                    });
                }
            });
        },
        onChangeEventHandler(settingItem, evt) {
            this.$element(settingItem.key).attr.value = evt.value;
        },
        btnSaveEventHandler(settingItem, evt) {
            let keyValue = this.$element(settingItem.key).attr.value;
            let url = apiUrl.updateSettingsById + "?id=" + settingItem.id + "&value=" + keyValue;
            this.updateSettingsById(url);
        }
    }
</script>